# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:
#    parameter_name: value

services:
    api.entity.validate:
        class: AppBundle\Service\ValidateEntityService
        arguments: ['@validator', '@jms_serializer']


    app.aws.queueservice.workers_base:
        abstract: true
        arguments:
        #NOTE! Don't use named keys here! That will prevent the child services from properly overriding the arguments.
          - placeholder_to_override #queueIdPrefix
          - ['%aws_access_key_id%', '%aws_secret_key%'] #credentials
          - %aws_sqs_region% #region
          - %aws_sqs_version% #version
          - %environment% #currentEnv

    app.aws.queueservice.external:
        class: AppBundle\Service\AwsExternalQueueService
        parent: app.aws.queueservice.workers_base
        arguments: { index_0: '%aws_sqs_queue_exteral_prefix%' }

    app.aws.queueservice.internal:
        class: AppBundle\Service\AwsInternalQueueService
        parent: app.aws.queueservice.workers_base
        arguments: { index_0: '%aws_sqs_queue_interal_prefix%' }

    app.aws.queueservice.mixblup_input:
        class: AppBundle\Service\MixBlupInputQueueService
        parent: app.aws.queueservice.workers_base
        arguments: { index_0: '%aws_sqs_queue_mixblup_input_prefix%' }

    app.aws.queueservice.mixblup_output:
        class: AppBundle\Service\MixBlupOutputQueueService
        parent: app.aws.queueservice.workers_base
        arguments: { index_0: '%aws_sqs_queue_mixblup_output_prefix%' }

    app.aws.storageservice:
        class: AppBundle\Service\AWSSimpleStorageService
        arguments:
          credentials: ['%aws_access_key_id%', '%aws_secret_key%']
          region: %aws_s3_region%
          version: %aws_s3_version%
          bucket: %aws_s3_bucket%
          currentEnv: %environment%

    app.doctrine.entitygetter:
        class: AppBundle\Service\EntityGetter
        arguments: ['@doctrine.orm.entity_manager']

    app.modifier.message:
        class: AppBundle\Component\Modifier\MessageModifier
        arguments: ['@doctrine.orm.entity_manager']

    app.modifier.animalremover:
        class: AppBundle\Component\Modifier\AnimalRemover
        arguments: ['@doctrine.orm.entity_manager']

    app.animallocation.history:
        class: AppBundle\Service\AnimalLocationHistoryService
        arguments: ['@doctrine.orm.entity_manager']

    app.messagebuilder.base:
        class: AppBundle\Component\MessageBuilderBase
        arguments:
          entityManager: ['@doctrine.orm.entity_manager']
          currentEnv: %environment%

    app.mixblup.input:
        class: AppBundle\Service\MixBlupInputFilesService
        arguments:
          entityManager: '@doctrine.orm.entity_manager'
          AWSSimpleStorageService: '@app.aws.storageservice'
          MixBlupInputQueueService: '@app.aws.queueservice.mixblup_input'
          currentEnv: %environment%
          cacheDir: %kernel.cache_dir%
          logger: '@logger'

    app.mixblup.output:
        class: AppBundle\Service\MixBlupOutputFilesService
        arguments:
          entityManager: '@doctrine.orm.entity_manager'
          AWSSimpleStorageService: '@app.aws.storageservice'
          MixBlupOutputQueueService: '@app.aws.queueservice.mixblup_output'
          currentEnv: %environment%
          cacheDir: %kernel.cache_dir%
          logger: '@logger'


    app.datafix.base.duplicate:
        abstract: true
        arguments:
        #NOTE! Don't use named keys here! That will prevent the child services from properly overriding the arguments.
          - '@doctrine.orm.entity_manager'

    app.datafix.animals.duplicate:
        parent: app.datafix.base.duplicate
        class: AppBundle\Service\DataFix\DuplicateAnimalsFixer

    app.datafix.litter.duplicate:
        parent: app.datafix.base.duplicate
        class: AppBundle\Service\DataFix\DuplicateLitterFixer


    app.migrator.vsm:
        class: AppBundle\Service\Migration\VsmMigratorService
        arguments:
          entityManager: '@doctrine.orm.entity_manager'
          rootDir: %kernel.root_dir%
          animalTableImporter: '@app.migrator.importer.animaltable'
          animalTableMigrator: '@app.migrator.animaltable'
          litterMigrator: '@app.migrator.litters'
          tagReplaceMigrator: '@app.migrator.tagreplace'
          wormResistanceMigrator: '@app.migrator.wormresistance'
          duplicateLitterFixer: '@app.datafix.litter.duplicate'

    app.migrator.base:
        abstract: true
        arguments:
        #NOTE! Don't use named keys here! That will prevent the child services from properly overriding the arguments.
          - '@doctrine.orm.entity_manager'
          - %kernel.root_dir%

    app.migrator.importer.animaltable:
        parent: app.migrator.base
        class: AppBundle\Service\Migration\AnimalTableImporter

    app.migrator.animaltable:
        parent: app.migrator.base
        class: AppBundle\Service\Migration\AnimalTableMigrator

    app.migrator.litters:
        parent: app.migrator.base
        class: AppBundle\Service\Migration\LitterMigrator

    app.migrator.tagreplace:
        parent: app.migrator.base
        class: AppBundle\Service\Migration\TagReplaceMigrator

    app.migrator.wormresistance:
        parent: app.migrator.base
        class: AppBundle\Service\Migration\WormResistanceMigrator

    app.breed.index:
        class: AppBundle\Service\BreedIndexService
        arguments:
          entityManager: '@doctrine.orm.entity_manager'
          logger: '@logger'

    app.breed.value:
        class: AppBundle\Service\BreedValueService
        arguments:
          entityManager: '@doctrine.orm.entity_manager'
          logger: '@logger'

    app.breed.valueprinter:
        class: AppBundle\Service\BreedValuePrinter
        arguments:
          entityManager: '@doctrine.orm.entity_manager'
          logger: '@logger'
          cacheDir: %kernel.cache_dir%

    app.excel.service:
        class: AppBundle\Service\ExcelService
        arguments:
          excelBundle: '@phpexcel'
          cacheDir: %kernel.cache_dir%
          logger: '@logger'

    app.serializer.ir:
        class: AppBundle\Service\IRSerializer
        arguments: ['@jms_serializer', '@doctrine.orm.entity_manager', '@app.doctrine.entitygetter']

    app.health.updater:
        class: AppBundle\Service\HealthService
        arguments: ['@doctrine.orm.entity_manager']

    app.authenticator.token:
        class: AppBundle\Component\Authentication\TokenAuthenticator
        arguments:
          entityManager: '@doctrine.orm.entity_manager'
          httpUtil: '@security.http_utils'
          unauthedPaths: ['/api/v1/doc', '/api/v1/auth/register', '/api/v1/auth/authorize']
        public: false

    app.report.pedigree_register:
        class: AppBundle\Service\PedigreeRegisterOverviewReportService
        arguments:
          entityManager: '@doctrine.orm.entity_manager'
          excelBundle: '@app.excel.service'
          logger: '@logger'