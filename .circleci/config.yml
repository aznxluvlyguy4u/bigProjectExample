# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/php:7.1-apache-node-browsers-legacy

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mysql:9.4
      - image: redis

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "composer.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: sudo apt-get install -y libzip-dev
      - run: sudo docker-php-ext-install zip
      - run: sudo apt-get update
      - run: sudo apt-get install -y zlib1g-dev libicu-dev g++ libxml2-dev
      - run: sudo docker-php-ext-configure intl
      - run: sudo docker-php-ext-install intl
      - run: sudo -E docker-php-ext-install pdo_mysql
      - run: sudo -E docker-php-ext-install soap
      - run: sudo apt-get install unzip
      - run: cp app/config/parameters_test.circle.yml app/config/parameters.yml

      # download sonar-scanner binary
      - run: sudo wget https://s3.eu-central-1.amazonaws.com/jvt.maven.repo/nl/jongensvantechniek/sonar/sonar-scanner-cli-3.2.0.1227-linux.zip -P ~/

      # unpack binary to root folder
      - run: sudo unzip ~/sonar-scanner-cli-3.2.0.1227-linux.zip -d ~/

      # append sonar configuration properties to sonar properties file,
      # make sure the following environment variables are set:
      #
      # - sonar_project_key
      # - sonar_sources
      # - sonar_tests
      # - sonar_host_url
      # - sonar_login
      #
      - run: echo "sonar.projectKey=$sonar_project_key" | sudo tee -a ~/sonar-scanner-3.2.0.1227-linux/conf/sonar-scanner.properties
      - run: echo "sonar.sources=src" | sudo tee -a ~/sonar-scanner-3.2.0.1227-linux/conf/sonar-scanner.properties
      - run: echo "sonar.tests=tests" | sudo tee -a ~/sonar-scanner-3.2.0.1227-linux/conf/sonar-scanner.properties
      - run: echo "sonar.host.url=$sonar_host_url" | sudo tee -a  ~/sonar-scanner-3.2.0.1227-linux/conf/sonar-scanner.properties
      - run: echo "sonar.login=$sonar_token" | sudo tee -a  ~/sonar-scanner-3.2.0.1227-linux/conf/sonar-scanner.properties

      # set php memory limit to unlimited in order to fix memory exhausted on composer install
      - run: sudo sed -i -e 's/memory_limit = 128M/memory_limit = -1/g' /usr/local/etc/php/php.ini-production
      - run: sudo sed -i -e 's/memory_limit = 128M/memory_limit = -1/g' /usr/local/etc/php/php.ini-development

      - run: composer install -n --prefer-dist

      - save_cache:
          paths:
            - ./vendor
          key: v1-dependencies-{{ checksum "composer.json" }}

      # run tests!
#      - run: ./bin/phpunit --verbose --debug

      # finally, run sonar scanner and let scanner publish scan results to sonar host
      - run: sudo ~/sonar-scanner-3.2.0.1227-linux/bin/sonar-scanner